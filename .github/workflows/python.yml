name: Python

on:
  pull_request:

jobs:
  build_and_test:
    name: Check everything builds & tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
        # Lowest and highest, no version specified so that 
        # new releases get automatically tested against
        torch_version: [torch==1.10, torch]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: "x64"


      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Lint with RustFmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: stable
          command: fmt
          args: --manifest-path ./bindings/python/Cargo.toml -- --check

      - name: Lint with Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path ./bindings/python/Cargo.toml --all-targets --all-features -- -D warnings

      - name: Run Audit
        uses: actions-rs/cargo@v1
        with:
          command: audit
          args: -D warnings -f ./bindings/python/Cargo.lock

      - name: Install
        working-directory: ./bindings/python
        run: |
          pip install -U pip
          pip install pytest requests setuptools_rust numpy pyarrow datasets
          pip install ${{ matrix.torch_version }} tensorflow numpy
          pip install jax jaxlib flax
          python setup.py develop

      - name: Check style
        working-directory: ./bindings/python
        run: |
          pip install black==22.3 click==8.0.4
          black --check --line-length 119 --target-version py35 py_src/safetensors tests

      - name: Run tests
        working-directory: ./bindings/python
        run: |
          cargo test
          pytest -sv tests/
