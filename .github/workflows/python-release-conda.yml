name: Python Release - Conda

on:
  push:
    tags:
      - v*

env:
  ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}

jobs:
  build_and_package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        # 3.11 not available on Conda yet.
        python: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python }}

      - name: Conda info
        shell: bash -l {0}
        run: conda info

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Setup conda env
        shell: bash -l {0}
        run: |
          conda install setuptools-rust
          conda install -c defaults anaconda-client conda-build

      - name: Extract version
        shell: bash -l {0}
        working-directory: ./bindings/python
        run: echo "SAFETENSORS_VERSION=`grep -m 1 version Cargo.toml | grep -e '".*"' -o | tr -d '"' | sed s/-/./ `" >> $GITHUB_ENV

      - name: Build conda packages
        shell: bash -l {0}
        run: |
          conda info
          conda list
          conda-build .github/conda --python=${{ matrix.python }}

      - name: Upload to Anaconda
        shell: bash -l {0}
        run: |
          anaconda upload `conda-build .github/conda --output` --force

  build_and_package_linux:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/manylinux2014_x86_64
      # See below.
      volumes:
        - /node20217:/node20217:rw,rshared
        - /node20217:/__e/node20:ro,rshared

    strategy:
      fail-fast: false
      matrix:
        python: [39, 310, 311, 312, 313]
        include:
          - python: 39
            checksum: d8d13344b46a057659397b9ca1a948d184bf59f04efa8864df8c01f7557e2baa
          - python: 310
            checksum: 04a8b03d8b0ec062d923e592201a6fd88b7247c309ef8848afb25c424c40ac39
          - python: 311
            checksum: 238abad23f8d4d8ba89dd05df0b0079e278909a36e06955f12bbef4aa94e6131
          - python: 312
            checksum: a0def9c732d94b156529ef7db8edd6e1862cee784a27a4961870dca86e89fba4
          - python: 313
            checksum: 6022714da22986097bbefa13dab3d957257fef04e1c37d1ebd3645b5b99bc9d4

    steps:
      # Node 20 as provided by GitHub runners requires a newer glibc version than what
      # is provided by manylinux2014. As a consequence, the checkout action fails. So
      # we download a build for older glibc versions. This build is unofficial in the
      # sense that it's not a standard supported OS, however, it is provided by the
      # project.
      - name: Override node.js version
        run: |
          wget https://unofficial-builds.nodejs.org/download/release/v20.19.5/node-v20.19.5-linux-x64-glibc-217.tar.gz
          echo "cb7a61858c38bf6c1c740ed5c62a38b221f06ef5363cde9420e4bdbe230386d7  node-v20.19.5-linux-x64-glibc-217.tar.gz" | sha256sum --check --status
          tar -xf node-v20.9.0-linux-x64-glibc-217.tar.xz --strip-components 1 -C /node20217

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install miniconda
        run: |
          yum install -y wget openssl-devel
          export FILENAME=Miniconda3-py${{ matrix.python }}_25.9.1-1-Linux-x86_64.sh
          wget https://repo.anaconda.com/miniconda/$FILENAME
          sha256sum $FILENAME | awk '$1=="${{ matrix.checksum}}"{print"good to go"}'
          bash $FILENAME -b -p $HOME/miniconda
          source $HOME/miniconda/bin/activate

      - name: Show glibc information
        shell: bash -l {0}
        run: ldd --version

      - name: Conda info
        shell: bash -l {0}
        run: |
          source $HOME/miniconda/bin/activate
          conda info

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Setup conda env
        shell: bash -l {0}
        run: |
          source $HOME/miniconda/bin/activate
          conda install setuptools-rust
          conda install -c defaults anaconda-client conda-build

      - name: Extract version
        shell: bash -l {0}
        working-directory: ./bindings/python
        run: |
          source $HOME/miniconda/bin/activate
          echo "SAFETENSORS_VERSION=`grep -m 1 version Cargo.toml | grep -e '".*"' -o | tr -d '"' | sed s/-/./ `" >> $GITHUB_ENV

      - name: Build conda packages
        shell: bash -l {0}
        run: |
          source $HOME/miniconda/bin/activate
          conda info
          conda list
          conda-build .github/conda --python=${{ matrix.python }}

      - name: Upload to Anaconda
        shell: bash -l {0}
        run: |
          source $HOME/miniconda/bin/activate
          anaconda upload `conda-build .github/conda --output` --force
